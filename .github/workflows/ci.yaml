name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  verify-recommendations-engine:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Verify Recommendations Engine
        run: |
          cd modules/recommendations-engine/code
          mvn verify

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          cd modules/recommendations-engine/chart
          helm template recommendations-engine . --output-dir=generated

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Recommendations Engine Docker image
        uses: docker/build-push-action@v6
        with:
          context: modules/recommendations-engine/code
          tags: recommendations-engine:latest
          outputs: type=docker,dest=/tmp/recommendations-engine.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: recommendations-engine
          path: /tmp/recommendations-engine.tar

  verify-recommendations-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Verify Recommendations Service
        run: |
          cd modules/recommendations-service/code
          docker build -t recommendations-service:latest .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Recommendations Service Docker image
        uses: docker/build-push-action@v6
        with:
          context: modules/recommendations-service/code
          tags: recommendations-service:latest
          outputs: type=docker,dest=/tmp/recommendations-service.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: recommendations-service
          path: /tmp/recommendations-service.tar

  verify-users-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Verify Users Service
        run: |
          cd modules/users-service/code
          docker build -t users-service:latest .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Users Service Docker image
        uses: docker/build-push-action@v6
        with:
          context: modules/users-service/code
          tags: users-service:latest
          outputs: type=docker,dest=/tmp/users-service.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: users-service
          path: /tmp/users-service.tar

  verify-with-e2e-tests:
    runs-on: ubuntu-latest
    needs: [verify-recommendations-engine, verify-recommendations-service, verify-users-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: images
          path: /tmp

      - name: Load images
        run: |
          docker load --input /tmp/recommendations-engine.tar
          docker load --input /tmp/recommendations-service.tar
          docker load --input /tmp/users-service.tar
          docker image ls -a

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.9'

      - name: Setup Kind
        run: go install sigs.k8s.io/kind@v0.22.0

      - name: Create K8s cluster
        run: kind create cluster --config .github/kind.yml

      - name: Install Ingress Controller
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

      - name: Wait for Ingress Controller
        run: kubectl -n ingress-nginx rollout status deployment ingress-nginx-controller

      - name: Load Docker images in Kind
        run: |
          kind load docker-image recommendations-engine:latest
          kind load docker-image recommendations-service:latest
          kind load docker-image users-service:latest

      - name: Install Recomendations Engine
        run: |
          cd modules/recommendations-engine/chart
          helm install recommendations-engine . --wait

      - name: Install Recomendations Service
        run: |
          cd modules/recommendations-service/chart
          helm install recommendations-service . --wait

      - name: Install Users Service
        run: |
          cd modules/users-service/chart
          helm install users-service . --wait

      - name: Run E2E tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: curl -i http://recommendations-engine-127-0-0-1.nip.io/recommendations/existingUser@atlassian.com | grep "HTTP/1.1 200"