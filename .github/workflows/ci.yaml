name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  verify-recommendations-engine:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Verify Recommendations Engine
        run: |
          cd modules/recommendations-engine/code
          mvn verify
          docker build -t recommendations-engine:latest .
          cd ../chart
          helm template recommendations-engine . --output-dir=generated

  verify-recommendations-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Verify Recommendations Service
        run: |
          cd modules/recommendations-service/code
          docker build -t recommendations-service:latest .

  verify-users-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Verify Users Service
        run: |
          cd modules/users-service/code
          docker build -t users-service:latest .

  verify-with-e2e-tests:
    runs-on: ubuntu-latest
    needs: [verify-recommendations-engine, verify-recommendations-service, verify-users-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.9'

      - name: Setup Kind
        run: go install sigs.k8s.io/kind@v0.22.0

      - name: Create K8s cluster
        run: kind create cluster --config infra/kind.yaml

      - name: Install Ingress Controller
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

      - name: Wait for Ingress Controller
        run: kubectl -n ingress-nginx rollout status deployment ingress-nginx-controller